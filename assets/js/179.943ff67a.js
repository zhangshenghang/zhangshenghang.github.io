(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{544:function(s,e,a){"use strict";a.r(e);var t=a(8),_=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"elasticsearch时间类型的坑-究竟如何选择使用的格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch时间类型的坑-究竟如何选择使用的格式"}},[s._v("#")]),s._v(" ElasticSearch时间类型的坑！究竟如何选择使用的格式？")]),s._v(" "),e("p",[s._v("在使用 "),e("strong",[s._v("ElasticSearch")]),s._v(" 作为数据存储时，日期字段常常是我们进行查询和分析的关键数据之一。尤其是在处理时间戳时，ElasticSearch 提供了灵活的时间格式支持，可以处理多种不同的时间格式。本文将探讨当设置多个时间格式时，ElasticSearch 是如何决定使用哪个格式的，并分析可能出现的潜在问题。")]),s._v(" "),e("h2",{attrs:{id:"elasticsearch-时间字段的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-时间字段的定义"}},[s._v("#")]),s._v(" ElasticSearch 时间字段的定义")]),s._v(" "),e("p",[s._v("在 "),e("strong",[s._v("ElasticSearch")]),s._v(" 中，时间字段通常会定义为 "),e("code",[s._v("date")]),s._v(" 类型。这种类型允许我们指定时间格式，帮助 ElasticSearch 解析并存储时间数据。通过 "),e("code",[s._v("mappings")]),s._v(" 来定义时间字段时，可以指定一个或多个时间格式。")]),s._v(" "),e("h2",{attrs:{id:"支持的常用时间格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持的常用时间格式"}},[s._v("#")]),s._v(" 支持的常用时间格式")]),s._v(" "),e("p",[s._v("ElasticSearch 支持多种时间格式，使得我们可以方便地处理各种不同来源的数据。常见的几种时间格式包括：")]),s._v(" "),e("h3",{attrs:{id:"_1-yyyy-mm-dd-hh-mm-ss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-yyyy-mm-dd-hh-mm-ss"}},[s._v("#")]),s._v(" 1. "),e("code",[s._v("yyyy-MM-dd HH:mm:ss")])]),s._v(" "),e("p",[s._v("这种格式表示一个具体的时间点，包括年月日、小时、分钟、秒。例如，"),e("code",[s._v("2022-03-15 12:30:45")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"_2-yyyy-mm-dd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-yyyy-mm-dd"}},[s._v("#")]),s._v(" 2. "),e("code",[s._v("yyyy-MM-dd")])]),s._v(" "),e("p",[s._v("这种格式只包含年月日，不包括具体的时间部分。例如，"),e("code",[s._v("2022-03-15")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"_3-epoch-millis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-epoch-millis"}},[s._v("#")]),s._v(" 3. "),e("code",[s._v("epoch_millis")])]),s._v(" "),e("p",[e("code",[s._v("epoch_millis")]),s._v(" 表示毫秒级的时间戳，指从 "),e("code",[s._v("1970-01-01 00:00:00 UTC")]),s._v(" 到当前时间的毫秒数。例如，"),e("code",[s._v("1672531200000")]),s._v(" 表示 "),e("code",[s._v("2023-01-01 00:00:00 UTC")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"_4-epoch-second"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-epoch-second"}},[s._v("#")]),s._v(" 4. "),e("code",[s._v("epoch_second")])]),s._v(" "),e("p",[e("code",[s._v("epoch_second")]),s._v(" 表示秒级的时间戳，指从 "),e("code",[s._v("1970-01-01 00:00:00 UTC")]),s._v(" 到当前时间的秒数。例如，"),e("code",[s._v("1672531200")]),s._v(" 表示 "),e("code",[s._v("2023-01-01 00:00:00 UTC")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"如何设置多个格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何设置多个格式"}},[s._v("#")]),s._v(" 如何设置多个格式")]),s._v(" "),e("p",[s._v("在 ElasticSearch 中，可以通过在 "),e("code",[s._v("mappings")]),s._v(" 中为日期字段指定多个格式，来支持不同的时间表示方式。通过使用 "),e("code",[s._v("||")]),s._v(" 运算符，可以将多个格式结合起来，ElasticSearch 会尝试按顺序匹配每个格式。")]),s._v(" "),e("p",[s._v("以下是一个完整的例子，展示了如何为日期字段设置多个格式：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://s2.loli.net/2025/01/19/SO57X6MarRk4oWp.png",alt:"image-20250116135042021"}})]),s._v(" "),e("p",[s._v("在这个配置中这个字段支持了四种时间格式：")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("yyyy-MM-dd HH:mm:ss")])]),s._v(" "),e("li",[e("code",[s._v("yyyy-MM-dd")])]),s._v(" "),e("li",[e("code",[s._v("epoch_millis")]),s._v("（毫秒级时间戳）")]),s._v(" "),e("li",[e("code",[s._v("epoch_second")]),s._v("（秒级时间戳）")])]),s._v(" "),e("h2",{attrs:{id:"elasticsearch-如何选择时间格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-如何选择时间格式"}},[s._v("#")]),s._v(" ElasticSearch 如何选择时间格式")]),s._v(" "),e("p",[s._v("那么如果当我们写入一个时间戳，到底使用的是"),e("code",[s._v("epoch_millis")]),s._v("还是"),e("code",[s._v("epoch_second")]),s._v("呢？")]),s._v(" "),e("p",[s._v("在这里很多朋友可能说，10 位的时间戳是"),e("code",[s._v("epoch_second")]),s._v("秒级时间戳，13 位的是"),e("code",[s._v("epoch_millis")]),s._v("毫秒级时间戳。")]),s._v(" "),e("p",[s._v("那么问题来了，当我们写入 1 时，它算哪个类型呢？")]),s._v(" "),e("p",[s._v("先说结论：实际它不是按照位数判断的，当向 ElasticSearch 中写入时间数据时，它会按照配置的格式顺序进行匹配，找到第一个符合格式的规则进行解析。")]),s._v(" "),e("h3",{attrs:{id:"我们来实际验证一下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我们来实际验证一下"}},[s._v("#")]),s._v(" 我们来实际验证一下")]),s._v(" "),e("p",[s._v("写入一条数据")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('POST /example_index/_doc\n{\n  "first_login_time": 1672531200\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("查看数据(这里我们通过 script 方式自动转换时间)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('GET /example_index/_search\n{\n  "_source": {\n    "includes": ["first_login_time"]\n  },\n  "script_fields": {\n    "formatted_time": {\n      "script": {\n        "source": """\n          DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss").withZone(ZoneOffset.UTC);\n          return formatter.format(Instant.ofEpochMilli(doc[\'first_login_time\'].value.millis));\n        """\n      }\n    }\n  }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("结果我们发现，它是按照毫秒单位写入的，这也就验证了刚刚的结论，按照我们设置的 format 顺序进行的匹配。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('{\n        "_index" : "example_index",\n        "_type" : "_doc",\n        "_id" : "9r2WbZQBpX9FjWS70nx1",\n        "_score" : 1.0,\n        "_source" : {\n          "first_login_time" : 1672531200\n        },\n        "fields" : {\n          "formatted_time" : [\n            "1970-01-20 08:35:31"\n          ]\n        }\n      }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("按照这个逻辑，发现"),e("code",[s._v("epoch_second")]),s._v("类型永远无法触发，想了下如果反过来配置呢？")]),s._v(" "),e("p",[s._v("按照这个格式创建字段"),e("code",[s._v("yyyy-MM-dd HH:mm:ss || yyyy-MM-dd || epoch_second || epoch_millis")]),s._v("，写入毫秒的时间戳。")]),s._v(" "),e("p",[s._v("发现结果为"),e("code",[s._v("+33658-09-27 01:46:40")]),s._v(",也同样无法按照毫秒级写入。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://s2.loli.net/2025/01/19/AanjsNxRVCtrmS3.png",alt:"image"}})]),s._v(" "),e("h2",{attrs:{id:"潜在问题与结论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#潜在问题与结论"}},[s._v("#")]),s._v(" 潜在问题与结论")]),s._v(" "),e("p",[s._v("经过实际验证，我们发现，ElasticSearch 在同时设置 "),e("code",[s._v("epoch_second")]),s._v(" 和 "),e("code",[s._v("epoch_millis")]),s._v(" 时，始终会选择第一个匹配的格式。因此，如果你同时设置这两个格式，后面的配置（如 "),e("code",[s._v("epoch_millis")]),s._v("）将不会生效。这个行为可能是 ElasticSearch 的一个潜在 Bug，用户在配置多个时间格式时应避免同时使用 "),e("code",[s._v("epoch_second")]),s._v(" 和 "),e("code",[s._v("epoch_millis")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案：")]),s._v(" "),e("ol",[e("li",[s._v("如果需要使用秒级时间戳，请仅配置 "),e("code",[s._v("epoch_second")]),s._v("。")]),s._v(" "),e("li",[s._v("如果需要使用毫秒级时间戳，请仅配置 "),e("code",[s._v("epoch_millis")]),s._v("。")]),s._v(" "),e("li",[s._v("避免同时配置这两个选项。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);