(window.webpackJsonp=window.webpackJsonp||[]).push([[306],{669:function(a,s,t){"use strict";t.r(s);var r=t(8),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"spark启动命令参数详细介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark启动命令参数详细介绍"}},[a._v("#")]),a._v(" Spark启动命令参数详细介绍")]),a._v(" "),s("p",[a._v("[toc]")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("spark-submit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--master")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--deploy-mode client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--class")]),a._v(" com.application.AttributesCreateLabelsApplication "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--jars")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" /data/flink-job/jast-test/lib/*.jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("' '")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("','")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--num-executors "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--executor-cores "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--executor-memory 4g "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--driver-memory 2g "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--files")]),a._v(" ./env.properties "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.kryoserializer.buffer.max")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.rpc.message.maxSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("500")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.sql.shuffle.partitions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.default.parallelism")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.storage.memoryFraction")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.3")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.shuffle.memoryFraction")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.7")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.shuffle.safetyFraction")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.maxAppAttempts")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.am.attemptFailuresValidityInterval")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.max.executor.failures")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" * num_executors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.executor.failuresValidityInterval")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.task.maxFailures")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.shuffle.spill")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.streaming.kafka.maxRatePerPartition")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.serializer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("org.apache.spark.serializer.KryoSerializer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.executor.extraJavaOptions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:-UseGCOverheadLimit"')]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n/data/flink-job/jast-test/offline-1.0-SNAPSHOT.jar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br")])]),s("h2",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),s("h3",{attrs:{id:"num-executors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#num-executors"}},[a._v("#")]),a._v(" num-executors")]),a._v(" "),s("p",[a._v("该作业总共需要多少executor进程执行")]),a._v(" "),s("ul",[s("li",[a._v("建议：每个作业运行一般设置50-~100个左右较合适")])]),a._v(" "),s("h3",{attrs:{id:"executor-memory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executor-memory"}},[a._v("#")]),a._v(" executor-memory")]),a._v(" "),s("p",[a._v("设置每个executor进程的内存， num-executors*executor-memory代表作业申请的总内存量（尽量不要超过最大总内存的1/3~1/2）")]),a._v(" "),s("ul",[s("li",[a._v("建议：设置4G~8G较合适")])]),a._v(" "),s("h3",{attrs:{id:"executor-cores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executor-cores"}},[a._v("#")]),a._v(" executor-cores")]),a._v(" "),s("p",[a._v("每个executor进程的CPU Core数量，该参数决定每个")]),a._v(" "),s("p",[a._v("executor进程并行执行task线程的能力， num-executors* executor-cores代表")]),a._v(" "),s("p",[a._v("作业申请总CPU core数（不要超过总CPU Core的1/3~1/2 ）")]),a._v(" "),s("ul",[s("li",[a._v("建议：设置2~4个较合适")])]),a._v(" "),s("h3",{attrs:{id:"driver-memory-am"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#driver-memory-am"}},[a._v("#")]),a._v(" driver-memory(AM)")]),a._v(" "),s("p",[a._v("设置Driver进程的内存")]),a._v(" "),s("ul",[s("li",[a._v("建议：通常不用设置，一般1G就够了，若出现使用collect算子将RDD数据全部拉取到Driver上处理，就必须确\n保该值足够大，否则OOM内存溢出")]),a._v(" "),s("li",[a._v("dump到本地时候会用到这个内存，存储到hdfs上不需要使用这个，一般不用修改")])]),a._v(" "),s("h3",{attrs:{id:"spark-default-parallelism"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark-default-parallelism"}},[a._v("#")]),a._v(" spark.default.parallelism")]),a._v(" "),s("p",[a._v("每个stage的默认task数量")]),a._v(" "),s("ul",[s("li",[a._v("建议：设置500~1000较合适，默认一个HDFS的block对应一个task，Spark默认值偏少，这样导致不能充分利\n用资源")])]),a._v(" "),s("h3",{attrs:{id:"spark-storage-memoryfraction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark-storage-memoryfraction"}},[a._v("#")]),a._v(" spark.storage.memoryFraction")]),a._v(" "),s("p",[a._v("设置RDD持久化数据在executor内存中能占的比例，")]),a._v(" "),s("p",[a._v("默认0.6，即默认executor 60%的内存可以保存持久化RDD数据")]),a._v(" "),s("ul",[s("li",[a._v("建议：若有较多的持久化操作，可以设置高些，超出内存的会频繁gc导致运行缓慢")])]),a._v(" "),s("h3",{attrs:{id:"spark-shuffle-memoryfraction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark-shuffle-memoryfraction"}},[a._v("#")]),a._v(" spark.shuffle.memoryFraction")]),a._v(" "),s("p",[a._v("聚合操作占executor内存的比例，默认0.2")]),a._v(" "),s("ul",[s("li",[a._v("建议：若持久化操作较少，但shuffle较多时，可以降低持久化内存占比，提高shuffle操作内存占比")])]),a._v(" "),s("h3",{attrs:{id:"total-executor-cores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#total-executor-cores"}},[a._v("#")]),a._v(" total-executor-cores")]),a._v(" "),s("p",[a._v("这个参数是所有的executor使用的总CPU核数。[ standalone default all cores ]")]),a._v(" "),s("blockquote",[s("p",[s("strong",[a._v("注：[ standalone default all cores ]")]),a._v("\n所以standalone模式下可以不设置num-executors，num-executors=total-executor-cores/executor-cores，并且total-executor-cores必须是executor-cores的整数倍，否则启动的num-executors向下取整")])]),a._v(" "),s("h3",{attrs:{id:"异常重试设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常重试设置"}},[a._v("#")]),a._v(" 异常重试设置")]),a._v(" "),s("blockquote",[s("p",[a._v("参考：")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/weixin_36378951/article/details/112199312")])]),a._v(" "),s("h4",{attrs:{id:"spark-yarn-maxappattempts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark-yarn-maxappattempts"}},[a._v("#")]),a._v(" spark.yarn.maxAppAttempts")]),a._v(" "),s("p",[s("code",[a._v("--conf spark.yarn.maxAppAttempts")])]),a._v(" "),s("p",[a._v("**注：**如果"),s("code",[a._v("spark.yarn.maxAppAttempts")]),a._v(" 的值大于"),s("code",[a._v("yarn.resourcemanager.am.max-attempts")]),a._v("， 并不会生效，小于是可以的。")]),a._v(" "),s("p",[a._v("spark.yarn.maxAppAttempts属性在提交程序时限制其重试次数，如：\n"),s("code",[a._v("spark-submit --conf spark.yarn.maxAppAttempts=1")])]),a._v(" "),s("p",[a._v("因为我们使用的是Spark on Yarn，虽然由Yarn负责启动和管理AM以及分配资源，但是Spark有自己的AM实现，当Executor运行起来后，任务的控制是由Driver负责的。而重试上，Yarn只负责AM的重试。Executor重试见下面介绍。")]),a._v(" "),s("h4",{attrs:{id:"spark-yarn-max-executor-failures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark-yarn-max-executor-failures"}},[a._v("#")]),a._v(" spark.yarn.max.executor.failures")]),a._v(" "),s("p",[a._v("在Spark对ApplicationMaster的实现里，Spark提供了参数 "),s("code",[a._v("spark.yarn.max.executor.failures")]),a._v(" 来控制Executor的失败次数，当Executor的失败次数达到这个值的时候，整个Spark应该程序就失败了")]),a._v(" "),s("p",[a._v("以上相关Spark属性的定义如下:")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("属性名")]),a._v(" "),s("th",[a._v("默认值")]),a._v(" "),s("th",[a._v("解释")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("spark.yarn.maxAppAttempts")]),a._v(" "),s("td",[a._v("YARN配置中的yarn.resourcemanager.am.max-attempts属性的值")]),a._v(" "),s("td",[a._v("提交申请的最大尝试次数, 小于等于YARN配置中的全局最大尝试次数。")])]),a._v(" "),s("tr",[s("td",[a._v("spark.yarn.max.executor.failures")]),a._v(" "),s("td",[a._v("numExecutors * 2, with minimum of 3 ，即 max(2 * num executors，3)")]),a._v(" "),s("td",[a._v("应用程序失败之前的最大执行程序失败次数。")])])])]),a._v(" "),s("p",[a._v("在YARN配置中，我们可以看到：")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("属性名")]),a._v(" "),s("th",[a._v("默认值")]),a._v(" "),s("th",[a._v("解释")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("yarn.resourcemanager.am.max-attempts")]),a._v(" "),s("td",[a._v("2")]),a._v(" "),s("td",[a._v("最大应用程序尝试次数。 它是所有AM的全局设置。 每个应用程序主机都可以通过API指定其各自的最大应用程序尝试次数，但是单个数字不能超过全局上限。 如果是，资源管理器将覆盖它。 默认数量设置为2，以允许至少一次重试AM.")])])])]),a._v(" "),s("p",[s("strong",[a._v("所以默认情况下，spark.yarn.maxAppAttempts的值为2，如果想不进行第二次重试，可以将改值设为1(注意，0值是无效的，至少为提交一次)")])]),a._v(" "),s("h4",{attrs:{id:"spark-yarn-am-attemptfailuresvalidityinterval-与-spark-yarn-executor-failuresvalidityinterval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark-yarn-am-attemptfailuresvalidityinterval-与-spark-yarn-executor-failuresvalidityinterval"}},[a._v("#")]),a._v(" spark.yarn.am.attemptFailuresValidityInterval 与 spark.yarn.executor.failuresValidityInterval")]),a._v(" "),s("p",[a._v("如果应用程序运行数天或数周，而不重新启动或重新部署在高度使用的群集上，则可能在几个小时内耗尽尝试次数。为了避免这种情况，尝试计数器应该在每个小时都重置。")]),a._v(" "),s("p",[a._v("新增参数"),s("code",[a._v("--conf spark.yarn.am.attemptFailuresValidityInterval=1h")])]),a._v(" "),s("h4",{attrs:{id:"配置建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置建议"}},[a._v("#")]),a._v(" 配置建议")]),a._v(" "),s("ol",[s("li",[a._v("修改yarn配置"),s("code",[a._v("yarn.resourcemanager.am.max-attempts")]),a._v("为5")]),a._v(" "),s("li",[a._v("启动命令如下")])]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("spark-submit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--master")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" --deploy-mode cluster "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.maxAppAttempts")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.am.attemptFailuresValidityInterval")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.max.executor.failures")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" * num_executors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.yarn.executor.failuresValidityInterval")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("    \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.task.maxFailures")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);